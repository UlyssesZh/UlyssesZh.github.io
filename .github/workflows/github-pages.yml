name: Deploy to pages

on:
  push:
    branches:
      - master

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.JEKYLL_PAT }}
        
      #- uses: actions/cache@v3
      #  with:
      #    path: vendor/bundle
      #    key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
      #    restore-keys: ${{ runner.os }}-gems-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        id: setup-ruby
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - name: Set up GHC
        uses: haskell-actions/setup@v2
        id: setup-ghc
        with:
          ghc-version: 9.4.7

      - name: Restore GHC cache
        uses: actions/cache/restore@v3
        id: cache-restore-ghc
        with:
          path: ${{ steps.setup-ghc.outputs.cabal-store }}
          key: ${{ runner.os }}-cabal-${{ hashFiles('**/Gemfile') }}
      
      - name: Install Haskell packages
        if: steps.cache-restore-ghc.outputs.cache-hit != 'true'
        run: cabal v2-install pandoc-cli pandoc-crossref

      - name: Save GHC cache
        uses: actions/cache/save@v3
        id: cache-save-ghc
        if: steps.cache-restore-ghc.outputs.cache-hit != 'true'
        with:
          path: |
            ${{ steps.setup-ghc.outputs.cabal-store }}
            ${{ steps.setup-ghc.outputs.cabal-store }}/../bin
          key: ${{ runner.os }}-cabal-${{ hashFiles('**/Gemfile') }}
      
      - name: Install cargo packages
        uses: baptiste0928/cargo-install@v2
        with:
          crate: pandoc-katex
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Gemfile') }}

      - id: pages
        uses: actions/configure-pages@v3

      - run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - uses: actions/upload-pages-artifact@v2

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v2
