name: Deploy to pages

on:
  workflow_dispatch: {}
  push:
    branches: [master]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.JEKYLL_PAT }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        id: setup-ruby
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Set up GHC
        uses: haskell-actions/setup@v2
        id: setup-ghc
        with:
          ghc-version: '9.8'

      - name: Restore Cabal cache
        uses: actions/cache/restore@v4
        id: cache-cabal-restore
        with:
          path: |
            ${{ github.workspace }}/bin-dev
            ${{ steps.setup-ghc.outputs.cabal-store }}
          key: ${{ runner.os }}-cabal-${{ hashFiles('**/cabal.lock') }}

      - name: Install Haskell packages
        if: steps.cache-cabal-restore.outputs.cache-hit != 'true'
        run: cabal v2-install pandoc-cli pandoc-crossref --install-method=copy --installdir=$GITHUB_WORKSPACE/bin-dev

      - name: Save Cabal cache
        uses: actions/cache/save@v4
        if: steps.cache-cabal-restore.outputs.cache-hit != 'true'
        with:
          path: |
            ${{ github.workspace }}/bin-dev
            ${{ steps.setup-ghc.outputs.cabal-store }}
          key: ${{ runner.os }}-cabal-${{ hashFiles('**/cabal.lock') }}

      - name: Install cargo packages
        uses: baptiste0928/cargo-install@v3
        with:
          crate: pandoc-katex
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/cargo.lock') }}

      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Add development binaries to PATH
        run: |
          echo "$GITHUB_WORKSPACE/bin-dev" >> $GITHUB_PATH

      - name: Jekyll build
        run: bundle exec jekyll build --verbose --trace --profile --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          GITHUB_RUN_ID: ${{ github.run_id }}

      - name: Upload
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
